#! /bin/bash

# downloaded from https://gist.github.com/naveenadi/8dbe75c04cae7739f5cce0a260eb3e08

if [ -d ./build ]; then
  if [ ! -d ./appimage ]; then    
    mkdir ./appimage;
    echo 'INFO:AppImage working directory created in ./appimage';
  fi
  cd ./appimage;
  echo 'INFO:Working directory changed to ./appimage';
fi

if [ ! -d ../build ]; then
  echo 'ERROR:Current directory is not contained within a flutter project';
  exit 0;
fi

export ARCH=$(uname -m)

echo "INFO:Generator:Searching AppDir" 
export appName='Passy'
#read -p "? Application Name: " appName
export appIcon='passy'
#read -p "? Icon: " appIcon
export appExec='passy'
#read -p "? Executable path relative to AppDir [usr/bin/app]: " appExec
# read -p "? Arguments [Default: $@]: " appExec_args
# read -p "? Update Information [Default: guess]: " guess
# read -p "? Architecture: " x86_64

export version=''

while read -r line; do
  if [[ $line == *'version: '* ]]; then
    export version=$(echo ${line:9:${#line}} | cut -d '+' -f1)
    break
  fi
done <'../pubspec.yaml'

if [[ ${#version} == 0 ]]; then
  read -p '? Could not detect current version. Enter current version manually [Eg: 1.0.0]: ' version
else
  echo 'INFO:Version detected:'$version
fi

function download_appimagetool() {
  if [ ! -d ../build ]; then mkdir ../build; fi
  if [ ! -d ../build/appimage ]; then mkdir ../build/appimage; fi
  if [ ! -d ../build/appimage/appimage-build ]; then mkdir ../build/appimage/appimage-build; fi
  if [ ! -x ../build/appimage/appimage-build/appimagetool-$ARCH.AppImage ]; then
    curl -L -o ../build/appimage/appimage-build/appimagetool-$ARCH.AppImage https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-$ARCH.AppImage
    chmod a+x ../build/appimage/appimage-build/appimagetool-$ARCH.AppImage 
  fi
}

function create_appdir() {
  if [ -d "../build/appimage/$appName.AppDir" ]; then rm -rf ../build/appimage/$appName.AppDir; fi
  mkdir ../build/appimage/$appName.AppDir
}

function after_bundle() {
  export PASSY_BUNDLE_PATH="../build/linux/x64/release/bundle"
  if [ ! -d "$PASSY_BUNDLE_PATH" ]; then
    export PASSY_BUNDLE_PATH="../build/linux/arm64/release/bundle"
  fi
  cp -r "$PASSY_BUNDLE_PATH"/* ../build/appimage/$appName.AppDir
  # cp $appIcon AppDir/usr/share/icons/

  # cp -r build/linux/*/release/bundle/ $appName.AppDir

  # if [[ $(file -b "$appIcon.[ps]*g") =~  ]];

  mkdir -p ../build/appimage/$appName.AppDir/usr/share/metainfo
  cp ../linux_assets/com.glitterware.passy.appdata.xml ../build/appimage/$appName.AppDir/usr/share/metainfo  

  if [ ! -b "../assets/images/logo_purple.svg" ]; then 
    mkdir -p ../build/appimage/$appName.AppDir/usr/share/icons/hicolor/scalable/apps
    cp "../assets/images/logo_purple.svg" ../build/appimage/$appName.AppDir/com.glitterware.passy.svg
    cp "../assets/images/logo_purple.svg" ../build/appimage/$appName.AppDir/usr/share/icons/hicolor/scalable/apps/com.glitterware.passy.svg
    # mkdir -p $appName.AppDir/usr/share/icons/
    # cp $appIcon.[ps]*g $appName.AppDir/usr/share/icons/
  fi
}

function create_apprun() {
  touch ../build/appimage/$appName.AppDir/AppRun
  echo -e '#!/bin/sh\n\ncd "$(dirname "$0")"\n./'$appExec' "$@"' > ../build/appimage/$appName.AppDir/AppRun
  chmod +x ../build/appimage/$appName.AppDir/AppRun
}

function create_desktop() {
  cp ../linux_assets/com.glitterware.passy.desktop ../build/appimage/$appName.AppDir/com.glitterware.passy.desktop

  mkdir ../build/appimage/$appName.AppDir/usr/share/applications
  cp ../build/appimage/$appName.AppDir/com.glitterware.passy.desktop ../build/appimage/$appName.AppDir/usr/share/applications/
}

function build_appimage() {
  # the build command itself:
  ../build/appimage/appimage-build/appimagetool-$ARCH.AppImage -n ../build/appimage/$appName.AppDir 

  # move result in build folder

  #if [ -b "../build/appimage/$appName-v$version-$ARCH.AppImage" ]; then rm "../build/appimage/$appName-v$version-$ARCH.AppImage"; fi
  cp ./$appName-$ARCH.AppImage ../build/appimage/$appName-v$version-$ARCH.AppImage
  #if [ -b "../build/appimage/$appName-latest-$ARCH.AppImage" ]; then rm "../build/appimage/$appName-Latest-$ARCH.AppImage"; fi
  mv ./$appName-$ARCH.AppImage ../build/appimage/$appName-Latest-$ARCH.AppImage
}


download_appimagetool
create_appdir
after_bundle
create_desktop
create_apprun
build_appimage
